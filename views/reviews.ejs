<%- include('partials/header', { title: title, page: page }) %>

<div class="flex-wrapper">

  <!-- Loading Modal -->
  <div class="modal fade" id="loadingModal" tabindex="-1" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-body text-center py-4">
          <!-- Loading State -->
          <div id="loadingState">
            <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
              <span class="visually-hidden">Memuat...</span>
            </div>
            <h5 class="mt-3">Memproses permintaan Anda...</h5>
            <p>Harap tunggu selagi kami mengambil data. Ini mungkin memerlukan beberapa saat.</p>
          </div>
          
          <!-- Results State -->
          <div id="resultsState" class="d-none">
            <div class="alert alert-success" id="successAlert" role="alert"></div>
            <div class="alert alert-danger d-none" id="errorAlert" role="alert"></div>
            <button class="btn btn-primary mt-3" id="closeModalButton" data-bs-dismiss="modal">Tutup</button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Auto Scrape Settings Modal -->
  <div class="modal fade" id="autoScrapeModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Pengaturan Scrape Otomatis</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
        </div>
        <div class="modal-body">
          <form id="autoScrapeForm" class="row g-3">
            <div class="col-12">
              <div class="form-check form-switch mb-3">
                <input class="form-check-input" type="checkbox" id="autoScrapeEnabled" name="enabled">
                <label class="form-check-label" for="autoScrapeEnabled">Aktifkan Scrape Otomatis</label>
              </div>
            </div>

            <div class="col-12">
              <div class="alert alert-info">
                <i class="bi bi-info-circle me-2"></i>
                Jika diaktifkan, ulasan akan otomatis diambil setiap hari tengah malam.
              </div>
            </div>
            
            <div class="col-12">
              <label for="lastScrape" class="form-label">Scrape Otomatis Terakhir</label>
              <input type="text" class="form-control" id="lastScrape" readonly disabled>
            </div>
            <div class="col-12">
              <label for="nextScrape" class="form-label">Scrape Terjadwal Berikutnya</label>
              <input type="text" class="form-control" id="nextScrape" readonly disabled>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
          <button type="button" id="saveAutoScrape" class="btn btn-primary">
            <span class="spinner-border spinner-border-sm d-none" id="autoScrapeSpinner"></span>
            Simpan Pengaturan
          </button>
        </div>
      </div>
    </div>
  </div>

  <div class="container content">
    <div class="mt-4 d-flex justify-content-between align-items-center mb-4">
      <h2 class="fw-bold"></h2>
      <div class="d-flex gap-2">
        <button id="autoScrapeButton" class="btn btn-outline-primary d-flex align-items-center">
          <i class="bi bi-clock-history me-2"></i>
          <span id="autoScrapeStatus">Scrape Otomatis</span>
        </button>
        <button id="crawlButton" class="btn btn-primary d-flex align-items-center">
          <span class="spinner-border spinner-border-sm d-none me-2" role="status" aria-hidden="true" id="crawlSpinner"></span>
          Scrape Ulasan Google Maps
        </button>
      </div>
    </div>
    
    <div class="card shadow-sm mb-5">
      <div class="card-header py-3">
        <h5 class="mb-0">Daftar Ulasan</h5>
      </div>
      <div class="card-header bg-light py-3">
        <form id="filterForm" class="row g-2 align-items-center justify-content-center" method="GET">
          <input type="hidden" name="page" value="1">
          <div class="col-12 col-sm-auto">
            <div class="input-group input-group-sm">
              <span class="input-group-text">Sentimen</span>
              <select name="sentiment" class="form-select" aria-label="Filter berdasarkan sentimen">
                <option value="">Semua Sentimen</option>
                <% filterOptions.sentiments.forEach(sentiment => { %>
                  <option value="<%= sentiment %>" <%= filters.sentiment === sentiment ? 'selected' : '' %>><%= sentiment %></option>
                <% }); %>
                <option value="pending" <%= filters.sentiment === 'pending' ? 'selected' : '' %>>Tertunda</option>
              </select>
            </div>
          </div>
          <div class="col-12 col-sm-auto">
            <div class="input-group input-group-sm">
              <span class="input-group-text">Dari</span>
              <input type="date" name="startDate" class="form-control" value="<%= filters.startDate || '' %>" aria-label="Tanggal mulai">
            </div>
          </div>
          <div class="col-12 col-sm-auto">
            <div class="input-group input-group-sm">
              <span class="input-group-text">Hingga</span>
              <input type="date" name="endDate" class="form-control" value="<%= filters.endDate || '' %>" aria-label="Tanggal akhir">
            </div>
          </div>
          <% if (filters.sentiment || filters.startDate || filters.endDate) { %>
          <div class="col-auto">
            <a href="/reviews" class="btn btn-sm btn-secondary">Reset</a>
          </div>
          <% } %>
          <div class="col-12 col-sm-auto">
            <button id="exportButton" class="btn btn-sm btn-success d-flex align-items-center">
              <i class="bi bi-file-earmark-excel me-2"></i>
              <span class="spinner-border spinner-border-sm d-none me-2" role="status" aria-hidden="true" id="exportSpinner"></span>
              Ekspor
            </button>
          </div>
        </form>
      </div>
      <div class="card-body p-4">
        <div class="table-responsive" style="height: 600px; overflow-y: auto;">
          <table class="table table-hover text-center table-striped">
            <thead class="table-light sticky-top">
              <tr>
                <th>Tanggal</th>
                <th class="text-start w-50">Ulasan</th>
                <th>Sentimen</th>
                <th>Sumber</th>
              </tr>
            </thead>
            <tbody>
              <% if (reviews.length === 0) { %>
                <tr>
                  <td colspan="4" class="text-center text-muted">Tidak ada ulasan ditemukan</td>
                </tr>
              <% } else { %>
                <% reviews.forEach(review => { %>
                  <tr>
                    <td><%= new Date(review.time_published).toLocaleDateString('id-ID') %></td>
                    <td class="text-start text-wrap"><%= review.review %></td>
                    <td>
                      <% if (!review.sentiment) { %>
                        <span class="badge rounded-pill bg-warning text-dark">Tertunda</span>
                      <% } else { %>
                        <span class="badge rounded-pill" id="badge-<%= review.id %>"><%= review.sentiment %></span>
                      <% } %>
                    </td>
                    <td>
                      <span class="badge bg-primary"><%= review.source %></span>
                    </td>
                  </tr>
                <% }); %>
              <% } %>
            </tbody>
          </table>
        </div>
        
        <% if (pagination.totalPages > 1) { %>
          <nav class="mt-4">
            <ul class="pagination flex-wrap justify-content-center">
              <li class="page-item <%= pagination.page === 1 ? 'disabled' : '' %>">
                <a class="page-link" href="<%= getPageUrl(pagination.page - 1) %>">&laquo;</a>
              </li>
              <% for (let i = 1; i <= pagination.totalPages; i++) { %>
                <% if (i === 1 || i === pagination.totalPages || (i >= pagination.page - 2 && i <= pagination.page + 2)) { %>
                  <li class="page-item <%= pagination.page === i ? 'active' : '' %>">
                    <a class="page-link" href="<%= getPageUrl(i) %>"><%= i %></a>
                  </li>
                <% } else if (i === 2 || i === pagination.totalPages - 1) { %>
                  <li class="page-item disabled">
                    <a class="page-link">...</a>
                  </li>
                <% } %>
              <% } %>
              <li class="page-item <%= pagination.page === pagination.totalPages ? 'disabled' : '' %>">
                <a class="page-link" href="<%= getPageUrl(pagination.page + 1) %>">&raquo;</a>
              </li>
            </ul>
          </nav>
        <% } %>
        
        <p class="text-center mt-3 text-muted">
          Menampilkan <%= (pagination.page - 1) * pagination.limit + 1 %> - 
          <%= Math.min(pagination.page * pagination.limit, pagination.totalCount) %> 
          dari <%= pagination.totalCount %> ulasan
          <% if (filters.sentiment === 'pending' || (filters.sentiment && filters.sentiment !== 'pending') || filters.startDate || filters.endDate) { %>
            (Difilter:
            <% if (filters.sentiment === 'pending') { %>Tertunda<% } else if (filters.sentiment) { %>Sentimen: <%= filters.sentiment %><% } %>
            <% if ((filters.sentiment === 'pending' || (filters.sentiment && filters.sentiment !== 'pending')) && (filters.startDate || filters.endDate)) { %>, <% } %>
            <% if (filters.startDate || filters.endDate) { %>Tanggal: <%= filters.startDate ? new Date(filters.startDate).toLocaleDateString('id-ID') : 'Kapan saja' %> hingga <%= filters.endDate ? new Date(filters.endDate).toLocaleDateString('id-ID') : 'Terbaru' %><% } %>)
          <% } %>
        </p>
      </div>
    </div>
  </div>
</div>

<%- include('./partials/footer') %>

<!-- Scripts -->
<script>
  // Color mapping
  const badgeColors = {
    'positif': '#2E7D32',  // Dark green
    'negatif': '#B71C1C',  // Dark red
    'netral': '#424242',   // Dark gray
    'puas': '#0D47A1',     // Dark blue
    'kecewa': '#E65100'    // Dark orange
  };

  document.addEventListener('DOMContentLoaded', function() {
    // Apply colors to sentiment badges
    applySentimentBadgeColors();
    
    // Initialize tooltips
    initTooltips();
    
    // Set up crawl button
    setupCrawlButton();
    
    // Handle filter
    setupFilterHandlers();
    
    // Set up export button
    setupExportButton();
    
    // Set up auto scrape button
    setupAutoScrape();

    // Reload page when modal is closed
    const loadingModal = document.getElementById('loadingModal');
    if (loadingModal) {
      loadingModal.addEventListener('hidden.bs.modal', function() {
        location.reload();
      });
    }
  });
  
  function applySentimentBadgeColors() {
    document.querySelectorAll('.badge').forEach(badge => {
      const sentiment = badge.textContent.trim().toLowerCase();
      if (badgeColors[sentiment]) {
        badge.style.backgroundColor = badgeColors[sentiment];
      }
    });
  }
  
  function initTooltips() {
    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl, {
        html: true
      });
    });
  }
  
  function setupCrawlButton() {
    document.getElementById('crawlButton').addEventListener('click', async function() {
      await performCrawl(this, 'crawlSpinner', '/reviews/crawl');
    });
  }
  
  function setupExportButton() {
    document.getElementById('exportButton').addEventListener('click', async function() {
      const spinner = document.getElementById('exportSpinner');
      const button = this;
      
      try {
        // Show loading state
        button.disabled = true;
        spinner.classList.remove('d-none');
        
        // Get current filters from the filter form
        const currentFilters = new URLSearchParams(new FormData(document.getElementById('filterForm'))).toString();
        
        // Trigger download using current filters
        window.location.href = `/reviews/export?${currentFilters}`;
        
      } catch (error) {
        console.error('Export failed:', error);
        alert('Ekspor gagal. Silakan coba lagi.');
      } finally {
        setTimeout(() => {
          button.disabled = false;
          spinner.classList.add('d-none');
        }, 1000);
      }
    });
  }
  
  function setupFilterHandlers() {
    const filterSelects = document.querySelectorAll('#filterForm select');
    const filterDates = document.querySelectorAll('#filterForm input[type="date"]');
    
    // Handle select changes
    filterSelects.forEach(select => {
      select.addEventListener('change', function() {
        document.getElementById('filterForm').submit();
      });
    });
    
    // Handle date changes
    filterDates.forEach(dateInput => {
      dateInput.addEventListener('change', function() {
        document.getElementById('filterForm').submit();
      });
    });
  }
  
  async function performCrawl(button, spinnerId, endpoint) {
    const spinner = document.getElementById(spinnerId);
    const loadingModal = new bootstrap.Modal(document.getElementById('loadingModal'));
    const loadingState = document.getElementById('loadingState');
    const resultsState = document.getElementById('resultsState');
    const successAlert = document.getElementById('successAlert');
    const errorAlert = document.getElementById('errorAlert');
    
    try {
      // Disable button and show spinner
      button.disabled = true;
      spinner.classList.remove('d-none');
      
      // Show loading modal
      loadingState.classList.remove('d-none');
      resultsState.classList.add('d-none');
      errorAlert.classList.add('d-none');
      successAlert.classList.add('d-none');
      loadingModal.show();
      
      const response = await fetch(endpoint, { 
        method: 'POST', 
        headers: { 'Content-Type': 'application/json' }
      });
      
      const result = await response.json();
      
      // Show results in modal
      loadingState.classList.add('d-none');
      resultsState.classList.remove('d-none');
      
      if (response.ok) {
        successAlert.textContent = result.message;
        successAlert.classList.remove('d-none');
      } else {
        errorAlert.textContent = result.message || 'Terjadi kesalahan yang tidak diketahui';
        errorAlert.classList.remove('d-none');
      }
    } catch (error) {
      console.error('Operation failed:', error);
      loadingState.classList.add('d-none');
      resultsState.classList.remove('d-none');
      errorAlert.textContent = 'Gagal melakukan operasi. Silakan coba lagi.';
      errorAlert.classList.remove('d-none');
    } finally {
      button.disabled = false;
      spinner.classList.add('d-none');
    }
  }
  
  function setupAutoScrape() {
    // Open modal with current settings
    document.getElementById('autoScrapeButton').addEventListener('click', async function() {
      try {
        const response = await fetch('/reviews/auto-scrape-settings');
        const settings = await response.json();
        
        // Populate the form with current settings
        document.getElementById('autoScrapeEnabled').checked = settings.enabled;
        
        // Show last and next scrape times
        if (settings.lastScrape) {
          document.getElementById('lastScrape').value = new Date(settings.lastScrape).toLocaleString('id-ID');
        } else {
          document.getElementById('lastScrape').value = 'Tidak Pernah';
        }
        
        if (settings.nextScrape && settings.enabled) {
          document.getElementById('nextScrape').value = new Date(settings.nextScrape).toLocaleString('id-ID');
        } else {
          document.getElementById('nextScrape').value = 'Tidak terjadwal';
        }
        
        // Update status button
        updateAutoScrapeStatusButton(settings.enabled);
        
      } catch (error) {
        console.error('Failed to fetch auto scrape settings:', error);
      }
      
      const autoScrapeModal = new bootstrap.Modal(document.getElementById('autoScrapeModal'));
      autoScrapeModal.show();
    });
    
    // Save settings
    document.getElementById('saveAutoScrape').addEventListener('click', async function() {
      const spinner = document.getElementById('autoScrapeSpinner');
      const button = this;
      const modal = bootstrap.Modal.getInstance(document.getElementById('autoScrapeModal'));
      
      try {
        // Show loading state
        button.disabled = true;
        spinner.classList.remove('d-none');
        
        const formData = {
          enabled: document.getElementById('autoScrapeEnabled').checked
        };
        
        const response = await fetch('/reviews/auto-scrape-settings', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(formData)
        });
        
        const result = await response.json();
        
        if (response.ok) {
          // Update status button
          updateAutoScrapeStatusButton(formData.enabled);
          modal.hide();
        } else {
          alert(result.message || 'Gagal menyimpan pengaturan');
        }
        
      } catch (error) {
        console.error('Failed to save auto scrape settings:', error);
        alert('Terjadi kesalahan saat menyimpan pengaturan');
      } finally {
        button.disabled = false;
        spinner.classList.add('d-none');
      }
    });
    
    // Load current status
    loadAutoScrapeStatus();
  }
  
  async function loadAutoScrapeStatus() {
    try {
      const response = await fetch('/reviews/auto-scrape-settings');
      const settings = await response.json();
      updateAutoScrapeStatusButton(settings.enabled);
    } catch (error) {
      console.error('Failed to load auto scrape status:', error);
    }
  }
  
  function updateAutoScrapeStatusButton(enabled) {
    const button = document.getElementById('autoScrapeButton');
    const status = document.getElementById('autoScrapeStatus');
    
    if (enabled) {
      button.classList.remove('btn-outline-primary');
      button.classList.add('btn-outline-success');
      status.textContent = 'Scrape Otomatis: Aktif';
    } else {
      button.classList.remove('btn-outline-success');
      button.classList.add('btn-outline-primary');
      status.textContent = 'Scrape Otomatis: Nonaktif';
    }
  }
</script>
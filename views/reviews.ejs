<%- include('partials/header', { title: title, page: page }) %>
<div class="flex-wrapper">
  <!-- Loading Modal -->
  <div class="modal fade" id="loadingModal" tabindex="-1" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-body text-center py-4">
          <!-- Loading State -->
          <div id="loadingState">
            <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
            <h5 class="mt-3">Processing your request...</h5>
            <p>Please wait while we scrape the data. This may take a few moments.</p>
          </div>
          
          <!-- Results State -->
          <div id="resultsState" class="d-none">
            <div class="alert alert-success" id="successAlert" role="alert"></div>
            <div class="alert alert-danger d-none" id="errorAlert" role="alert"></div>
            <button class="btn btn-primary mt-3" data-bs-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="container content">
    <div class="mt-4 d-flex justify-content-between align-items-center mb-4">
      <h2 class="fw-bold"></h2>
      <div class="d-flex gap-2">
        <button id="sheetsButton" class="btn btn-success d-flex align-items-center">
          <span class="spinner-border spinner-border-sm d-none me-2" role="status" aria-hidden="true" id="sheetsSpinner"></span>
          Scrape Google Forms Data
        </button>
        <button id="crawlButton" class="btn btn-primary d-flex align-items-center">
          <span class="spinner-border spinner-border-sm d-none me-2" role="status" aria-hidden="true" id="crawlSpinner"></span>
          Scrape Google Maps Reviews
        </button>
      </div>
    </div>
    
    <div class="card shadow-sm mb-5">
      <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
          <h5 class="mb-0">Review List</h5>
          <div class="d-flex gap-2">
            <form id="filterForm" class="d-flex gap-2" method="GET">
              <input type="hidden" name="page" value="1">
              <select name="sentiment" class="form-select form-select-sm" aria-label="Filter by sentiment">
                <option value="">All Sentiments</option>
                <% filterOptions.sentiments.forEach(sentiment => { %>
                  <option value="<%= sentiment %>" <%= filters.sentiment === sentiment ? 'selected' : '' %>><%= sentiment %></option>
                <% }); %>
                <option value="pending" <%= filters.sentiment === 'pending' ? 'selected' : '' %>>Pending</option>
              </select>
              <select name="source" class="form-select form-select-sm" aria-label="Filter by source">
                <option value="">All Sources</option>
                <% filterOptions.sources.forEach(source => { %>
                  <option value="<%= source %>" <%= filters.source === source ? 'selected' : '' %>><%= source %></option>
                <% }); %>
              </select>
              <a href="/reviews" class="btn btn-sm btn-secondary">Reset</a>
            </form>
          </div>
        </div>
      </div>
      <div class="card-body p-4">
        <div class="table-responsive" style="height: 600px; overflow-y: auto;">
          <table class="table table-hover text-center table-striped">
            <thead class="table-light sticky-top">
              <tr>
                <th>Date</th>
                <th class="text-start w-50">Review</th>
                <th>Sentiment</th>
                <th>Source</th>
                <th>Details</th>
              </tr>
            </thead>
            <tbody>
              <% if (reviews.length === 0) { %>
                <tr>
                  <td colspan="6" class="text-center text-muted">No reviews found</td>
                </tr>
              <% } else { %>
                <% reviews.forEach(review => { %>
                  <tr>
                    <td><%= new Date(review.time_published).toLocaleDateString() %></td>
                    <td class="text-start text-wrap"><%= review.review %></td>
                    <td>
                      <% const sentimentClass = review.sentiment ? 
                           (review.sentiment === 'positif' || review.sentiment === 'puas' ? 'success' : 
                            review.sentiment === 'negatif' || review.sentiment === 'kecewa' ? 'danger' : 
                            'secondary') : 'warning'; %>
                      <span class="badge rounded-pill bg-<%= sentimentClass %><%= sentimentClass === 'warning' ? ' text-dark' : '' %>">
                        <%= review.sentiment || 'Pending' %>
                      </span>
                    </td>
                    <td>
                      <span class="badge bg-<%= review.source === 'Google Forms' ? 'success' : 'primary' %>">
                        <%= review.source %>
                      </span>
                    </td>
                    <td>
                      <% if (review.review_extra) { %>
                        <button class="btn btn-sm" 
                                data-bs-toggle="tooltip" 
                                data-bs-placement="left"
                                data-bs-html="true"
                                title="<div class='text-start'>
                                       <strong>Gender:</strong> <%= review.review_extra.gender %><br>
                                       <strong>Age:</strong> <%= review.review_extra.age_category %><br>
                                       <strong>Occupation:</strong> <%= review.review_extra.occupation %><br>
                                       <strong>First Visit:</strong> <%= review.review_extra.first_visit ? 'Yes' : 'No' %>
                                       </div>">
                          <i class="bi bi-info-circle-fill"></i>
                        </button>
                      <% } %>
                    </td>
                  </tr>
                <% }); %>
              <% } %>
            </tbody>
          </table>
        </div>
        
        <% if (pagination.totalPages > 1) { %>
          <nav class="mt-4">
            <ul class="pagination flex-wrap justify-content-center">
              <li class="page-item <%= pagination.page === 1 ? 'disabled' : '' %>">
                <a class="page-link" href="<%= getPageUrl(pagination.page - 1) %>">&laquo;</a>
              </li>
              <% for (let i = 1; i <= pagination.totalPages; i++) { %>
                <% if (i === 1 || i === pagination.totalPages || (i >= pagination.page - 2 && i <= pagination.page + 2)) { %>
                  <li class="page-item <%= pagination.page === i ? 'active' : '' %>">
                    <a class="page-link" href="<%= getPageUrl(i) %>"><%= i %></a>
                  </li>
                <% } else if (i === 2 || i === pagination.totalPages - 1) { %>
                  <li class="page-item disabled">
                    <a class="page-link">...</a>
                  </li>
                <% } %>
              <% } %>
              <li class="page-item <%= pagination.page === pagination.totalPages ? 'disabled' : '' %>">
                <a class="page-link" href="<%= getPageUrl(pagination.page + 1) %>">&raquo;</a>
              </li>
            </ul>
          </nav>
        <% } %>
        
        <p class="text-center mt-3 text-muted">
          Showing <%= (pagination.page - 1) * pagination.limit + 1 %> - 
          <%= Math.min(pagination.page * pagination.limit, pagination.totalCount) %> 
          of <%= pagination.totalCount %> reviews
          <% if (filters.source || filters.sentiment === 'pending' || (filters.sentiment && filters.sentiment !== 'pending')) { %>
            (Filtered: 
            <% if (filters.source) { %>Source: <%= filters.source %><% } %>
            <% if (filters.source && (filters.sentiment === 'pending' || (filters.sentiment && filters.sentiment !== 'pending'))) { %>, <% } %>
            <% if (filters.sentiment === 'pending') { %>Pending<% } else if (filters.sentiment) { %>Sentiment: <%= filters.sentiment %><% } %>)
          <% } %>
        </p>
      </div>
    </div>
  </div>
</div>
<%- include('./partials/footer') %>

<!-- Scripts -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize tooltips
    initTooltips();
    
    // Set up crawl buttons
    setupCrawlButton();
    setupSheetsButton();
    
    // Handle filter
    setupFilterHandlers();
  });
  
  function initTooltips() {
    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl, {
        html: true
      });
    });
  }
  
  function setupCrawlButton() {
    document.getElementById('crawlButton').addEventListener('click', async function() {
      await performCrawl(this, 'crawlSpinner', '/reviews/crawl');
    });
  }
  
  function setupSheetsButton() {
    document.getElementById('sheetsButton').addEventListener('click', async function() {
      await performCrawl(this, 'sheetsSpinner', '/reviews/crawl-sheets');
    });
  }
  
  function setupFilterHandlers() {
    const filterSelects = document.querySelectorAll('#filterForm select');
    filterSelects.forEach(select => {
      select.addEventListener('change', function() {
        document.getElementById('filterForm').submit();
      });
    });
  }
  
  async function performCrawl(button, spinnerId, endpoint) {
    const spinner = document.getElementById(spinnerId);
    const loadingModal = new bootstrap.Modal(document.getElementById('loadingModal'));
    const loadingState = document.getElementById('loadingState');
    const resultsState = document.getElementById('resultsState');
    const successAlert = document.getElementById('successAlert');
    const errorAlert = document.getElementById('errorAlert');
    
    try {
      // Disable button and show spinner
      button.disabled = true;
      spinner.classList.remove('d-none');
      
      // Show loading modal
      loadingState.classList.remove('d-none');
      resultsState.classList.add('d-none');
      errorAlert.classList.add('d-none');
      successAlert.classList.add('d-none');
      loadingModal.show();
      
      const response = await fetch(endpoint, { 
        method: 'POST', 
        headers: { 'Content-Type': 'application/json' }
      });
      
      const result = await response.json();
      
      // Show results in modal
      loadingState.classList.add('d-none');
      resultsState.classList.remove('d-none');
      
      if (response.ok) {
        successAlert.textContent = result.message;
        successAlert.classList.remove('d-none');
      } else {
        errorAlert.textContent = result.message || 'An unknown error occurred';
        errorAlert.classList.remove('d-none');
      }
    } catch (error) {
      console.error('Operation failed:', error);
      loadingState.classList.add('d-none');
      resultsState.classList.remove('d-none');
      errorAlert.textContent = 'Failed to perform operation. Please try again.';
      errorAlert.classList.remove('d-none');
    } finally {
      button.disabled = false;
      spinner.classList.add('d-none');
    }
  }
</script>